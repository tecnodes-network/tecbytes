# Cosmos-based Chain Configuration (with Cosmovisor Support)
# This example shows all available options for Cosmos chains using Cosmovisor

# ============================================================================
# BASIC PROJECT INFORMATION
# ============================================================================
project_name: jackal
                       # Project identifier for logging and backups

# ============================================================================
# COSMOVISOR CONFIGURATION (Set to 'true' to enable Cosmovisor mode)
# ============================================================================
cosmovisor_mode: true
                       # Enable Cosmovisor-specific upgrade workflow
cosmovisor_home: /home/ubuntu/.canine/cosmovisor
      # Base directory for Cosmovisor (contains upgrades/, current/, genesis/)
daemon_name: canined
                       # Name of the blockchain daemon binary (e.g., gaiad, osmosisd, junod)
rpc_url: http://localhost:13717
		       # Chain RPC endpoint for fetching governance proposals

# ============================================================================
# DOWNLOAD/BUILD DIRECTORIES
# ============================================================================
download_dir: /home/ubuntu/jackal/bin-jackal
                 # Directory where downloaded/built binaries are stored temporarily
binary_dir: /usr/local/bin
              # Fallback install directory (used if cosmovisor_mode is false)
binary_names: canined
              # Comma-separated list of binaries (for non-Cosmovisor mode)
# ============================================================================
# PLATFORM AND UPGRADE METHOD
# ============================================================================
platform: linux-amd64
upgrade_method: compile

# ============================================================================
# DOWNLOAD METHOD CONFIGURATION (if upgrade_method: download)
# ============================================================================
# download_url_template: https://github.com/cosmos/gaia/releases/download/{VERSION}/gaiad-{VERSION}-{PLATFORM}
# {VERSION} will be replaced with the --version argument
# {PLATFORM} will be replaced with the platform value above

# ============================================================================
# COMPILE METHOD CONFIGURATION (if upgrade_method: compile)
# ============================================================================
git_repo_dir: /home/ubuntu/jackal/git-canine-chain
             # Path to the git repository for source compilation
build_command: make build
               # Command to build the binary (e.g., 'make build', 'cargo build --release')
compiled_binary_path: build
             # Relative path from git_repo_dir where binaries are located after build
# ============================================================================
# SERVICE CONFIGURATION (Optional - not used in Cosmovisor mode)
# ============================================================================
service_name: jackal.service
                          # Systemd service name (leave empty for Cosmovisor, as it manages the service)


# RPC Endpoint (actual Tendermint RPC, not REST)
rpc_endpoint: http://localhost:13757

# Chain ID
chain_id: jackal-1

# Chain Home
chain_home: ~/.canine

# Keyring configuration
keyring_backend: os
key_name: validator

# delegator and valoper address
delegator_address: jkl1qru73rflllclslgcxglchvuj2z5pvhzlcqrquy
valoper_address: jklvaloper1qru73rflllclslgcxglchvuj2z5pvhzldnrfya


# Password file (GPG encrypted) - leave empty for manual entry
password_file: 
#~/.cosmos-ops/jackal-password.gpg

# Gas configuration
max_gas_fee: 500ujkl
gas_adjustment: 1.2
